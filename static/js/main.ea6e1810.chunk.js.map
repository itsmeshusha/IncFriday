{"version":3,"sources":["pages/Login/Login.module.css","pages/Registration/Registration.module.css","common/Header/Header.module.css","pages/NewPassword/NewPassword.module.css","pages/RecoverPassword/RecoverPassword.module.css","pages/404/Error.module.css","common/SuperInputText/SuperInputText.module.css","pages/Profile/Profile.module.css","common/SuperCheckbox/SuperCheckbox.module.css","common/SuperButton/SuperButton.module.css","assets/images/404-Error.jpg","pages/404/Error.tsx","common/SuperInputText/SuperInputText.tsx","common/SuperCheckbox/SuperCheckbox.tsx","common/SuperButton/SuperButton.tsx","api/api-login.ts","redux/login-reducer.ts","pages/Login/Login.tsx","api/api-recover-password.ts","redux/new-password-reducer.ts","pages/NewPassword/NewPassword.tsx","api/api-auth.ts","redux/profile-reducer.ts","assets/images/user.png","pages/Profile/Profile.tsx","redux/recover-password-reducer.ts","pages/RecoverPassword/RecoverPassword.tsx","api/api-register.ts","redux/register-reducer.ts","pages/Registration/Registration.tsx","pages/Test/Test.tsx","Routes.tsx","common/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","Error","className","s","textContainer","img","src","err404","text","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","type","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","loginAPI","data","post","initState","isLoggedIn","Login","useState","email","setEmail","password","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","useSelector","state","login","to","PATH","PROFILE","mainBlock","left","heading","right","form","item","placeholder","target","onClick","loginData","then","res","catch","err","response","console","log","activeClassName","selected","RECOVER_PASSWORD","REGISTRATION","passwordAPI","from","message","newPassword","token","resetPasswordToken","status","successMessage","setAppStatusAC","NewPassword","confirmPassword","setConfirmPassword","useParams","LOGIN","success","setErrorAC","finally","sendNewPasswordTC","alert","authAPI","initialState","profile","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","Profile","useEffect","profileImage","user","alt","setRecoveryStatusAC","RecoverPassword","recoverySuccess","info","sendEmailTC","registerAPI","isRegistered","registerNewUserAC","Registration","register","newUserData","Test","NEW_PASSWORD","TEST","Routes","exact","path","render","Header","header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","recoverPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.ea6e1810.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Login_mainBlock__2Hnsf\",\"heading\":\"Login_heading__2uUNe\",\"form\":\"Login_form__YUnFu\",\"item\":\"Login_item__8ruFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Registration_mainBlock__2-tPy\",\"heading\":\"Registration_heading__1ikXU\",\"form\":\"Registration_form__2vKhD\",\"item\":\"Registration_item__2OvGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10E-F\",\"item\":\"Header_item__2jxiJ\",\"selected\":\"Header_selected__1gq-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"NewPassword_mainBlock__18qO6\",\"heading\":\"NewPassword_heading__1yeBX\",\"form\":\"NewPassword_form__GI_Wx\",\"item\":\"NewPassword_item__JkpR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"RecoverPassword_mainBlock__36Kk5\",\"heading\":\"RecoverPassword_heading__2PBQ9\",\"form\":\"RecoverPassword_form__2SbKz\",\"item\":\"RecoverPassword_item__hD7wO\",\"text\":\"RecoverPassword_text__17f5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"Error_textContainer__33KNz\",\"img\":\"Error_img__1DIRY\",\"text\":\"Error_text__1aWPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Dvnc\",\"errorInput\":\"SuperInputText_errorInput__2KNWh\",\"error\":\"SuperInputText_error__39NON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileImage\":\"Profile_profileImage__V14iU\",\"item\":\"Profile_item__1iv2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__BWIdw\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Sm-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2uC1O\",\"red\":\"SuperButton_red__3Lo1u\"};","export default __webpack_public_path__ + \"static/media/404-Error.f783912e.jpg\";","import React from 'react';\r\nimport s from './Error.module.css';\r\nimport err404 from '../../assets/images/404-Error.jpg'\r\n\r\nexport const Error = () => {\r\n\r\n    return <div className={s.textContainer}>\r\n        <div className={s.img} >\r\n            <img src={err404} />\r\n        </div>\r\n            <div className={s.text}>\r\n                Error 404: page donut found :(\r\n            </div>\r\n\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError?: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError &&setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import axios from 'axios';\r\n\r\nexport type LoginDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    withCredentials: true\r\n})\r\n\r\nexport const loginAPI = {\r\n    login (data: LoginDataType) {\r\n        return instance.post('auth/login', data)\r\n    }\r\n}","import { Dispatch } from \"redux\"\r\nimport {loginAPI, LoginDataType} from \"../api/api-login\";\r\n\r\nconst initState = {\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch(action.type) {\r\n        case \"LOGIN-REDUCER/LOGIN\": {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case \"LOGIN/SET_ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const loginAC = (isLoggedIn: boolean) => ({type: \"LOGIN-REDUCER/LOGIN\", isLoggedIn} as const)\r\nexport const setLoginErrorAC = (error: string) => ({type: \"LOGIN/SET_ERROR\", error} as const)\r\n\r\n//thunks\r\nexport const loginTC = (loginData: LoginDataType) => (dispatch: Dispatch) => {\r\n    loginAPI.login(loginData)\r\n        .then(res => {\r\n            dispatch(loginAC(true))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setLoginErrorAC(err.response.data.error + ' more details in the console'))\r\n            console.log('Error:', { ...err })\r\n        })\r\n}\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof loginAC | typeof setLoginErrorAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport s from './Login.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport {loginTC} from \"../../redux/login-reducer\";\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const loginClickHandler = () => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        {error ? error : \"\"}\r\n        <Bounce left>\r\n            <div className={s.heading}>Log In</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <span>Remember me</span>\r\n                    <SuperCheckbox checked={rememberMe} onChange={onChangeRememberMe}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={loginClickHandler}>Log In</SuperButton>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.selected} to={PATH.RECOVER_PASSWORD}>Forgot password?</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Don't have profile? Sign up.</NavLink>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const passwordAPI = {\r\n    recover(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"alexbushueva27@gmail.com\",\r\n            message: `<div style=\"background-color: #ffb7d5; padding: 15px border-radius: 20px\">\r\n                    password recovery link: \r\n                        <a href='https://itsmeshusha.github.io/IncFriday/#/new-password/$token$'>link</a>\r\n                    </div>\r\n                    `\r\n        })\r\n    },\r\n    newPassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('/auth/set-new-password',\r\n            {\r\n                password: newPassword,\r\n                resetPasswordToken: token\r\n            })\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'NEW-PASSWORD-REDUCER/SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'NEW-PASSWORD-REDUCER/SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'NEW-PASSWORD-REDUCER/SET_SUCCESS':\r\n            return {\r\n                ...state,\r\n                successMessage: action.success\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (success: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_SUCCESS', success} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'NEW-PASSWORD-REDUCER/SET_STATUS',status} as const)\r\n\r\n//thunks\r\nexport const sendNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    passwordAPI.newPassword(newPassword, token)\r\n        .then(res => {\r\n            dispatch(setSuccessAC(res.data.message))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC | typeof setAppStatusAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {sendNewPasswordTC} from \"../../redux/new-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './NewPassword.module.css'\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {PATH} from \"../../Routes\";\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\n\r\ntype ParamTypes = {\r\n    token: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const {token} = useParams<ParamTypes>()\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppStoreType, string>(state => state.newPassword.status)\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const setNewPassword = () => {\r\n\r\n        if (password === confirmPassword) {\r\n            dispatch(sendNewPasswordTC(password, token))\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (status === 'succeeded') {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return <div className={s.mainBlock}>\r\n        <Bounce left>\r\n            <div className={s.heading}>New Password</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={confirmPassword}\r\n                                    onChange={onChangeConfirmPassword}/>\r\n\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={setNewPassword}>Set password</SuperButton>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\", //сам сервер\r\n    // baseURL: \"http://localhost:7542/2.0/\", //сам сервер\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.post('auth/me')\r\n    },\r\n    updateMe (name: string | null, avatar: string | null) {\r\n        return instance.put('auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api-auth\";\r\nimport {loginAC} from \"./login-reducer\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: null,\r\n        email: null,\r\n        name: null,\r\n        avatar: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: null,\r\n        verified: null,\r\n        rememberMe: null,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ActionType): ProfileInitialStateType => {\r\n    switch(action.type) {\r\n        case \"PROFILE-REDUCER/SET_PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const setProfileAC = (profile: ProfileType) => ({type: \"PROFILE-REDUCER/SET_PROFILE\", profile} as const)\r\n\r\n\r\n//thunks\r\nexport const authMeTC = () => (dispatch: Dispatch) => {\r\n    return authAPI.me()\r\n        .then(res => {\r\n                dispatch(setProfileAC(res.data))\r\n\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype ActionType = ReturnType<typeof setProfileAC >\r\nexport type ProfileInitialStateType = {\r\n    profile: ProfileType\r\n}\r\nexport type ProfileType = {\r\n    _id: string | null\r\n    email: string | null\r\n    name: string | null\r\n    avatar: string | null\r\n    publicCardPacksCount: number | null\r\n    created: string | null\r\n    updated: string | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null\r\n    rememberMe: boolean | null\r\n    error: string | null\r\n}","export default __webpack_public_path__ + \"static/media/user.fd39d1b5.png\";","import React, {useEffect} from 'react';\r\nimport s from './Profile.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {authMeTC, ProfileType} from \"../../redux/profile-reducer\";\r\nimport user from \"../../assets/images/user.png\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../Routes\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const profile = useSelector<AppStoreType, ProfileType>(state => state.profile.profile)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            dispatch(authMeTC())\r\n        }\r\n    }, [isLoggedIn, dispatch])\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return <div>\r\n        <div className={s.profileImage}>\r\n            <img src={profile.avatar ? profile.avatar : user} alt='userPhoto'/>\r\n        </div>\r\n        <div className={s.item}>\r\n            id: {profile._id}\r\n        </div>\r\n        <div className={s.item}>\r\n            email: {profile.email}\r\n        </div>\r\n    </div>\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const recoverPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                status: action.error\r\n            }\r\n        }\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                status: action.recoverySuccess\r\n            }\r\n        }\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_RECOVERY_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setErrorAC = (error: string) => ({type: 'RECOVER-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (recoverySuccess: string) => ({\r\n    type: 'RECOVER-PASSWORD-REDUCER/SET_SUCCESS',\r\n    recoverySuccess\r\n} as const)\r\nexport const setRecoveryStatusAC = (status: RequestStatusType) => ({\r\n    type: 'RECOVER-PASSWORD-REDUCER/SET_RECOVERY_STATUS',\r\n    status\r\n} as const)\r\n\r\n//thunks\r\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setRecoveryStatusAC('loading'))\r\n    return passwordAPI.recover(email)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(setSuccessAC(res.data.info))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setRecoveryStatusAC('succeeded'))\r\n        })\r\n\r\n}\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC | typeof setRecoveryStatusAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {sendEmailTC} from \"../../redux/recover-password-reducer\";\r\nimport s from './RecoverPassword.module.css'\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\n\r\nexport const RecoverPassword = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(sendEmailTC(email))\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        <Bounce left>\r\n            <div className={s.heading}>Forgot Password?</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n                    <SuperButton onClick={sendEmail}>Send email</SuperButton>\r\n                </div>\r\n            </div>\r\n            <p className={s.text}>On your email we'll send a link. Please click it.</p>\r\n        </Bounce>\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\nexport type RegisterNewUserDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    withCredentials: true\r\n})\r\n\r\nexport const registerAPI = {\r\n    registerNewUser(data: RegisterNewUserDataType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerAPI, RegisterNewUserDataType} from \"../api/api-register\";\r\n\r\nconst initState = {\r\n    isRegistered: false\r\n}\r\n\r\nexport const registerReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch(action.type) {\r\n        case \"REGISTER-REDUCER/REGISTER-NEW-USER\": {\r\n            return {...state, isRegistered: action.isRegistered}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const registerNewUserAC = (isRegistered: boolean) => ({type: \"REGISTER-REDUCER/REGISTER-NEW-USER\", isRegistered} as const)\r\n\r\n//thunks\r\nexport const registerNewUserTC = (newUserData: RegisterNewUserDataType) => (dispatch: Dispatch) => {\r\n    registerAPI.registerNewUser(newUserData)\r\n        .then(res => {\r\n            if(res.status === 201){\r\n                dispatch(registerNewUserAC(true))\r\n            } else {\r\n                dispatch(registerNewUserAC(false))\r\n                alert(res.status)\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof registerNewUserAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {registerNewUserTC} from \"../../redux/register-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Registration.module.css\"\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\n\r\nexport const Registration = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.register.isRegistered)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const addNewUser = () => {\r\n        if (password === confirmPassword) {\r\n            dispatch(registerNewUserTC({email, password}))\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setConfirmPassword(\"\")\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        <Bounce left>\r\n            <div className={s.heading}>Registration</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"confirm password\"} value={confirmPassword}\r\n                                    onChange={onChangeConfirmPassword}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={addNewUser}>Register</SuperButton>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n}","import React from 'react'\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText />\r\n        <SuperButton>Button</SuperButton>\r\n        <SuperCheckbox />\r\n    </div>\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport {Error} from './pages/404/Error';\r\nimport {Login} from \"./pages/Login/Login\";\r\nimport {NewPassword} from \"./pages/NewPassword/NewPassword\";\r\nimport {Profile} from \"./pages/Profile/Profile\";\r\nimport {RecoverPassword} from \"./pages/RecoverPassword/RecoverPassword\";\r\nimport {Registration} from \"./pages/Registration/Registration\";\r\nimport {Test} from \"./pages/Test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password/:token?\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    REGISTRATION: \"/registration\",\r\n    TEST: \"/test\"\r\n}\r\n\r\n//Routes\r\n\r\nexport const Routes = () => {\r\n    return <div>\r\n        <Switch>\r\n            <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE} />} />\r\n            <Route path={PATH.LOGIN} render={() => <Login />} />\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n            <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n            <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n            <Route path={PATH.TEST} render={() => <Test />} />\r\n\r\n            <Route render={() => <Error />} />\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Header.module.css\"\r\n\r\n\r\nexport const Header = () => {\r\n    return <div className={s.header}>\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.LOGIN}>Log In</NavLink>\r\n        </span>\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Registration</NavLink>\r\n        </span>\r\n        {/*<span className={s.item}>*/}\r\n        {/*    <NavLink activeClassName={s.selected} to={PATH.RECOVER_PASSWORD}>Recover Password</NavLink>*/}\r\n        {/*</span>*/}\r\n        {/*<span className={s.item}>*/}\r\n        {/*    <NavLink activeClassName={s.selected} to={PATH.NEW_PASSWORD}>New Password</NavLink>*/}\r\n        {/*</span>*/}\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.PROFILE}>Profile</NavLink>\r\n        </span>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./common/Header/Header\";\r\nimport {Routes} from \"./Routes\";\r\nimport {Initialize} from \"./common/Initialize/Initialize\";\r\nimport {Loader} from \"./common/Loader/Loader\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <HashRouter>\r\n        <Header />\r\n        <Routes />\r\n            {/*<Initialize />*/}\r\n            {/*<Loader />*/}\r\n        </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {recoverPasswordReducer} from \"./recover-password-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    login: loginReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}