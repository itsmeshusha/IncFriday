{"version":3,"sources":["common/c1-SuperInputText/SuperInputText.module.css","common/c3-SuperCheckbox/SuperCheckbox.module.css","common/c2-SuperButton/SuperButton.module.css","pages/404/Error.module.css","common/c3-SuperCheckbox/SuperCheckbox.tsx","common/c1-SuperInputText/SuperInputText.tsx","common/c2-SuperButton/SuperButton.tsx","Header.tsx","pages/404/Error.tsx","pages/Login/Login.tsx","pages/NewPassword/NewPassword.tsx","pages/Profile/Profile.tsx","pages/RecoverPassword/RecoverPassword.tsx","pages/Registration/Registration.tsx","pages/Test/Test.tsx","Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SuperCheckbox","type","onChange","onChangeChecked","className","children","spanClassName","restProps","finalInputClassName","s","checkbox","e","currentTarget","checked","SuperInputText","onChangeText","onKeyPress","onEnter","error","setError","finalSpanClassName","errorInput","superInput","value","key","SuperButton","red","finalClassName","default","Header","to","Error","textContainer","text","Login","NewPassword","Profile","RecoverPassword","Registration","Test","PATH","Routes","exact","path","render","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb59951b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1E4cW\",\"errorInput\":\"SuperInputText_errorInput__3HsNd\",\"error\":\"SuperInputText_error__1KWi1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__3wlvP\",\"spanClassName\":\"SuperCheckbox_spanClassName__1uQ9X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__21Ncl\",\"red\":\"SuperButton_red__3N8GU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"Error_textContainer__33KNz\",\"text\":\"Error_text__1aWPg\"};","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError?: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError &&setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={\"text\"}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const Header = () => {\r\n    return <div>\r\n        <div>\r\n            <NavLink to={\"/login\"}>Log In</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={\"/registration\"}>Registration</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={\"/recover-password\"}>Recover Password</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={\"/new-password\"}>New Password</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={\"/profile\"}>Profile</NavLink>\r\n        </div>\r\n        <div>\r\n            <NavLink to={\"/test\"}>Test</NavLink>\r\n        </div>\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './Error.module.css';\r\n\r\nexport const Error = () => {\r\n    return <div className={s.textContainer}>\r\n\r\n        <div className={s.text}>\r\n            Error 404: page don't found :(\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport const Login = () => {\r\n    return <div>\r\n        Log In\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const NewPassword = () => {\r\n    return <div>\r\n        New Password\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n    return <div>\r\n        Profile\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const RecoverPassword = () => {\r\n    return <div>\r\n        Recover Password\r\n    </div>\r\n}","import React from 'react'\r\n\r\nexport const Registration = () => {\r\n    return <div>\r\n        Registration\r\n    </div>\r\n}","import React from 'react'\r\nimport SuperButton from \"../../common/c2-SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/c3-SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../common/c1-SuperInputText/SuperInputText\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText />\r\n        <SuperButton>Button</SuperButton>\r\n        <SuperCheckbox />\r\n    </div>\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport {Error} from './pages/404/Error';\r\nimport {Login} from \"./pages/Login/Login\";\r\nimport {NewPassword} from \"./pages/NewPassword/NewPassword\";\r\nimport {Profile} from \"./pages/Profile/Profile\";\r\nimport {RecoverPassword} from \"./pages/RecoverPassword/RecoverPassword\";\r\nimport {Registration} from \"./pages/Registration/Registration\";\r\nimport {Test} from \"./pages/Test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    REGISTRATION: \"/registration\",\r\n    TEST: \"/test\"\r\n}\r\nexport const Routes = () => {\r\n    return <div>\r\n        <Switch>\r\n            <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE} />} />\r\n            <Route path={PATH.LOGIN} render={() => <Login />} />\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n            <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n            <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n            <Route path={PATH.TEST} render={() => <Test />} />\r\n\r\n            <Route render={() => <Error />} />\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\nimport {HashRouter} from \"react-router-dom\";\nimport {Header} from \"./Header\";\nimport {Routes} from \"./Routes\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <HashRouter>\n        <Header />\n        <Routes />\n      <SuperCheckbox />\n      <SuperInputText  />\n      <SuperButton>Button</SuperButton>\n        </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}