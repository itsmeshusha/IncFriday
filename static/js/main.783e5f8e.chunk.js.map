{"version":3,"sources":["pages/Login/Login.module.css","pages/Registration/Registration.module.css","common/Header/Header.module.css","pages/NewPassword/NewPassword.module.css","pages/Profile/Profile.module.css","pages/RecoverPassword/RecoverPassword.module.css","pages/404/Error.module.css","common/SuperInputText/SuperInputText.module.css","common/SuperCheckbox/SuperCheckbox.module.css","common/SuperButton/SuperButton.module.css","pages/Logout/Logout.module.css","assets/images/404-Error.jpg","pages/404/Error.tsx","common/SuperInputText/SuperInputText.tsx","common/SuperCheckbox/SuperCheckbox.tsx","common/SuperButton/SuperButton.tsx","api/api-login.ts","redux/app-reducer.ts","redux/login-reducer.ts","common/Loader/Loader.tsx","pages/Login/Login.tsx","api/api-recover-password.ts","redux/new-password-reducer.ts","pages/NewPassword/NewPassword.tsx","api/api-auth.ts","redux/profile-reducer.ts","assets/images/user.png","pages/Profile/Profile.tsx","redux/recover-password-reducer.ts","pages/RecoverPassword/RecoverPassword.tsx","api/api-register.ts","redux/register-reducer.ts","pages/Registration/Registration.tsx","pages/Test/Test.tsx","pages/Logout/Logout.tsx","Routes.tsx","common/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx"],"names":["module","exports","Error","className","s","textContainer","img","src","err404","text","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","type","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","withCredentials","loginAPI","data","post","delete","initialState","status","setStatusAC","initState","isLoggedIn","loginAC","Loader","Login","useState","email","setEmail","password","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","useSelector","state","login","app","to","PATH","PROFILE","mainBlock","left","heading","right","form","item","placeholder","target","onClick","loginData","then","res","catch","err","response","console","log","activeClassName","selected","RECOVER_PASSWORD","REGISTRATION","passwordAPI","from","message","newPassword","token","resetPasswordToken","successMessage","NewPassword","confirmPassword","setConfirmPassword","useParams","LOGIN","success","setErrorAC","finally","sendNewPasswordTC","alert","authAPI","profile","_id","name","avatar","publicCardPacksCount","created","updated","isAdmin","verified","Profile","useEffect","profileImage","user","alt","RecoverPassword","recoverySuccess","info","sendEmailTC","registerAPI","isRegistered","registerNewUserAC","Registration","register","newUserData","Test","Logout","btn","NEW_PASSWORD","TEST","LOGOUT","Routes","exact","path","render","Header","header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","recoverPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"gHACAA,EAAOC,QAAU,CAAC,UAAY,yBAAyB,QAAU,uBAAuB,KAAO,oBAAoB,KAAO,sB,mBCA1HD,EAAOC,QAAU,CAAC,UAAY,gCAAgC,QAAU,8BAA8B,KAAO,2BAA2B,KAAO,6B,mBCA/ID,EAAOC,QAAU,CAAC,OAAS,uBAAuB,KAAO,qBAAqB,SAAW,2B,mBCAzFD,EAAOC,QAAU,CAAC,UAAY,+BAA+B,QAAU,6BAA6B,KAAO,0BAA0B,KAAO,4B,mBCA5ID,EAAOC,QAAU,CAAC,UAAY,2BAA2B,aAAe,8BAA8B,KAAO,wB,mBCA7GD,EAAOC,QAAU,CAAC,UAAY,mCAAmC,QAAU,iCAAiC,KAAO,8BAA8B,KAAO,8BAA8B,KAAO,gC,mBCA7LD,EAAOC,QAAU,CAAC,cAAgB,6BAA6B,IAAM,mBAAmB,KAAO,sB,mBCA/FD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,mBCA1HD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,uC,mBCA7ED,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,mBCA/DD,EAAOC,QAAU,CAAC,IAAM,sB,sLCDT,MAA0B,sCCI5BC,EAAQ,WAEjB,OAAO,sBAAKC,UAAWC,IAAEC,cAAlB,UACH,qBAAKF,UAAWC,IAAEE,IAAlB,SACI,qBAAKC,IAAKC,MAEV,qBAAKL,UAAWC,IAAEK,KAAlB,gD,uCCqDGC,EA/C2C,SAAC,GAWrD,IAREC,EAQH,EARGA,SAAUC,EAQb,EARaA,aACVC,EAOH,EAPGA,WAAYC,EAOf,EAPeA,QACZC,EAMH,EANGA,MACWC,GAKd,EALGb,UAKH,EALca,eACXC,EAIH,EAJGA,SAEGC,EAEN,iHAkBKC,EAAkB,UAAMf,IAAEW,MAAR,YAAiBC,GAAgC,IACnEI,EAAsBL,EAAQX,IAAEiB,WAAajB,IAAEkB,WAErD,OACI,qCACI,mCAEIX,SAxBa,SAACY,GACtBZ,GACGA,EAASY,GAEZX,GAAgBA,EAAaW,EAAEC,cAAcC,OAC7CR,GAAWA,EAAS,KAoBZJ,WAhBe,SAACU,GACxBV,GAAcA,EAAWU,GAEf,UAAVA,EAAEG,KACCZ,GACAA,KAYKX,UAAWiB,GAEPF,IAEPH,GAAS,sBAAMZ,UAAWgB,EAAjB,SAAsCJ,Q,iBCb7CY,EAlCyC,SAAC,GASpD,EAPGC,KAOF,IANEjB,EAMH,EANGA,SAAUkB,EAMb,EANaA,gBACV1B,EAKH,EALGA,UACA2B,GAIH,EALcd,cAKd,EAJGc,UAEGZ,EAEN,4FASKE,EAAmB,UAAMhB,IAAE2B,SAAR,YAAoB5B,GAAwB,IAErE,OACI,kCACI,mCACIyB,KAAM,WACNjB,SAda,SAACY,GACtBZ,GAAYA,EAASY,GAErBM,GAAmBA,EAAgBN,EAAEC,cAAcQ,UAY3C7B,UAAWiB,GAEPF,IAEPY,GAAY,sBAAM3B,UAAWC,IAAEY,cAAnB,SAAmCc,Q,iBCd7CG,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAK/B,EAGR,EAHQA,UACFe,EAEN,mCACKiB,EAAc,UAAMD,EAAM9B,IAAE8B,IAAM9B,IAAEgC,QAAtB,YAAiCjC,GAErD,OACI,oCACIA,UAAWgC,GACPjB,K,yCCbVmB,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAGRC,EAAW,SACbC,GACH,OAAON,EAASO,KAAK,aAAcD,IAF9BD,EAAW,WAKhB,OAAOL,EAASQ,OAAO,YClBzBC,EAAe,CACjBC,OAAQ,OACRhC,MAAO,MAcEiC,EAAc,SAACD,GACxB,MAAO,CACHnB,KAAM,iBACNmB,WChBFE,EAAY,CACdC,YAAY,EACZnC,MAAO,IAgBEoC,EAAU,SAACD,GAAD,MAA0B,CAACtB,KAAM,sBAAuBsB,e,iBClBlEE,G,MAAS,WAElB,OACI,qBAAKjD,UAAU,cAAf,SACI,sBAAKA,UAAU,eAAf,UACI,wBACA,wBACA,wBACA,+BCGHkD,EAAQ,WAAO,IAAD,EACGC,mBAAiB,IADpB,mBAChBC,EADgB,KACTC,EADS,OAESF,mBAAiB,IAF1B,mBAEhBG,EAFgB,KAENC,EAFM,OAGaJ,oBAAkB,GAH/B,mBAGhBK,EAHgB,KAGJC,EAHI,KAKjBC,EAAWC,cACXZ,EAAaa,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMf,cACrEnC,EAAQgD,aAAkC,SAAAC,GAAK,OAAIA,EAAMC,MAAMlD,SAC/DgC,EAASgB,aAA6C,SAAAC,GAAK,OAAIA,EAAME,IAAInB,UAkB/E,OAAIG,EACO,cAAC,IAAD,CAAUiB,GAAIC,GAAKC,UAGvB,sBAAKlE,UAAWC,IAAEkE,UAAlB,UACS,YAAXvB,GAAwB,cAAC,EAAD,IACxBhC,GAAgB,GACjB,cAAC,IAAD,CAAQwD,MAAI,EAAZ,SACI,qBAAKpE,UAAWC,IAAEoE,QAAlB,sBAEJ,cAAC,IAAD,CAAQC,OAAK,EAAb,SACI,sBAAKtE,UAAWC,IAAEsE,KAAlB,UACI,qBAAKvE,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,OAAQgD,YAAa,QAASnD,MAAO8B,EAAO5C,SA7B5D,SAACY,GACnBiC,EAASjC,EAAEsD,OAAOpD,YA8BV,qBAAKtB,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,WAAYgD,YAAa,WAAYnD,MAAOgC,EAClD9C,SA7BP,SAACY,GACtBmC,EAAYnC,EAAEsD,OAAOpD,YA8Bb,sBAAKtB,UAAWC,IAAEuE,KAAlB,UACI,+CACA,cAAC,EAAD,CAAe3C,QAAS2B,EAAYhD,SA7BzB,SAACY,GACxBqC,EAAcrC,EAAEsD,OAAO7C,eA8Bf,qBAAK7B,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAaG,QA5BH,WFXP,IAACC,EEYhBlB,GFZgBkB,EEYC,CAACxB,QAAOE,WAAUE,cFZU,SAACE,GAClDA,EAASb,EAAY,YACrBN,EAAeqC,GACVC,MAAK,SAAAC,GACFpB,EAASV,GAAQ,IACjBU,EAASb,EAAY,iBAExBkC,OAAM,SAAAC,GACHtB,EAXuC,CAACjC,KAAM,kBAAmBb,MAWxCoE,EAAIC,SAASzC,KAAK5B,MAAQ,iCACnDsE,QAAQC,IAAI,SAAZ,eAA0BH,IAC1BtB,EAASb,EAAY,kBE6Bb,sBAGJ,qBAAK7C,UAAWC,IAAEuE,KAAlB,SACI,cAAC,IAAD,CAASY,gBAAiBnF,IAAEoF,SAAUrB,GAAIC,GAAKqB,iBAA/C,gCAEJ,qBAAKtF,UAAWC,IAAEuE,KAAlB,SACI,cAAC,IAAD,CAASY,gBAAiBnF,IAAEoF,SAAUrB,GAAIC,GAAKsB,aAA/C,qDCrEdrD,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,sCACTC,iBAAiB,IAGRkD,EAAc,SACfpC,GACJ,OAAOlB,EAASO,KAAK,eAAgB,CACjCW,QACAqC,KAAM,2BACNC,QAAQ,6RALPF,EAAc,SAYXG,EAAqBC,GAC7B,OAAO1D,EAASO,KAAK,yBACjB,CACIa,SAAUqC,EACVE,mBAAoBD,KCpB9B9C,EAAY,CACdF,OAAQ,OACRhC,MAAO,GACPkF,eAAgB,I,iBCWPC,EAAc,WAAO,IAAD,EAEG5C,mBAAS,IAFZ,mBAEtBG,EAFsB,KAEZC,EAFY,OAGiBJ,mBAAS,IAH1B,mBAGtB6C,EAHsB,KAGLC,EAHK,KAItBL,EAASM,cAATN,MACDlC,EAAWC,cACXf,EAASgB,aAA6C,SAAAC,GAAK,OAAIA,EAAME,IAAInB,UAmB/E,MAAe,cAAXA,EACO,cAAC,IAAD,CAAUoB,GAAIC,GAAKkC,QAIvB,sBAAKnG,UAAWC,IAAEkE,UAAlB,UACS,YAAXvB,GAAwB,cAAC,EAAD,IACzB,cAAC,IAAD,CAAQwB,MAAI,EAAZ,SACI,qBAAKpE,UAAWC,IAAEoE,QAAlB,4BAEJ,cAAC,IAAD,CAAQC,OAAK,EAAb,SACI,sBAAKtE,UAAWC,IAAEsE,KAAlB,UACI,qBAAKvE,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,WAAYgD,YAAa,WAAYnD,MAAOgC,EAClD9C,SA/BP,SAACY,GACtBmC,EAAYnC,EAAEsD,OAAOpD,YAiCb,qBAAKtB,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,WAAYgD,YAAa,WAAYnD,MAAO0E,EAClDxF,SAhCA,SAACY,GAC7B6E,EAAmB7E,EAAEsD,OAAOpD,YAkCpB,qBAAKtB,UAAWC,IAAEuE,KAAlB,SACI,cAAC,EAAD,CAAaG,QAhCN,WAEfrB,IAAa0C,EACbtC,EDLqB,SAACiC,EAAqBC,GAAtB,OAAwC,SAAClC,GACtEA,EAASb,EAAY,YACrB2C,EAAwBG,EAAaC,GAChCf,MAAK,SAAAC,GACFpB,EAPsC,CAACjC,KAAM,mCAAoC2E,QAO3DtB,EAAItC,KAAKkD,UAC/BhC,EAASb,EAAY,iBAExBkC,OAAM,SAAAC,GACH,IAAMpE,EAAQoE,EAAIC,SACZD,EAAIC,SAASzC,KAAK5B,MACjBoE,EAAIU,QAAU,gCACrBhC,EAfc,SAAC9C,GAAD,MAAoB,CAACa,KAAM,iCAAkCb,SAelEyF,CAAWzF,OAEvB0F,SAAQ,WACL5C,EAASb,EAAY,kBCTZ0D,CAAkBjD,EAAUsC,IAErCY,MAAM,2BA2BE,qC,iBC/DdtE,EAAWC,IAAMC,OAAO,CAC1BC,QAAS,uCAETC,iBAAiB,IAGRmE,EAAU,WAEf,OAAOvE,EAASO,KAAK,YCPvBE,EAAwC,CAC1C+D,QAAS,CACLC,IAAK,KACLvD,MAAO,KACPwD,KAAM,KACNC,OAAQ,KACRC,qBAAsB,KACtBC,QAAS,KACTC,QAAS,KACTC,QAAS,KACTC,SAAU,KACV1D,WAAY,KACZ5C,MAAO,OChBA,MAA0B,iCCW5BuG,GAAU,WACnB,IAAMpE,EAAaa,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMf,cACrE2D,EAAU9C,aAAuC,SAAAC,GAAK,OAAIA,EAAM6C,QAAQA,WAExEhD,EAAWC,cAOjB,OANAyD,qBAAU,WACFrE,GACAW,GFmBkB,SAACA,GAC3B,OAAO+C,IACF5B,MAAK,SAAAC,GACEpB,EAPuC,CAACjC,KAAM,8BAA+BiF,QAOvD5B,EAAItC,UAGjCuC,OAAM,SAAAC,GACH,IAAMpE,EAAQoE,EAAIC,SACZD,EAAIC,SAASzC,KAAK5B,MACjBoE,EAAIU,QAAU,gCACrBR,QAAQC,IAAIvE,WE3BjB,CAACmC,EAAYW,IAEZX,EAIG,qBAAK/C,UAAWC,IAAEkE,UAAlB,SACH,sBAAKnE,UAAWC,IAAEyG,QAAlB,UACI,qBAAK1G,UAAWC,IAAEoH,aAAlB,SACI,qBAAKjH,IAAKsG,EAAQG,OAASH,EAAQG,OAASS,EAAMC,IAAI,gBAE1D,sBAAKvH,UAAWC,IAAEuE,KAAlB,iBACSkC,EAAQC,OAEjB,sBAAK3G,UAAWC,IAAEuE,KAAlB,oBACYkC,EAAQtD,cAZjB,cAAC,IAAD,CAAUY,GAAIC,GAAKkC,SCnB5BrD,GAAY,CACdF,OAAQ,OACRhC,MAAO,GACPkF,eAAgB,I,oBCKP0B,GAAkB,WAAO,IAAD,EAEPrE,mBAAS,IAFF,mBAE1BC,EAF0B,KAEnBC,EAFmB,KAG3BT,EAASgB,aAA6C,SAAAC,GAAK,OAAIA,EAAME,IAAInB,UACzEc,EAAWC,cAajB,OAAO,sBAAK3D,UAAWC,KAAEkE,UAAlB,UACS,YAAXvB,GAAwB,cAAC,EAAD,IACzB,cAAC,IAAD,CAAQwB,MAAI,EAAZ,SACI,qBAAKpE,UAAWC,KAAEoE,QAAlB,gCAEJ,eAAC,IAAD,CAAQC,OAAK,EAAb,UACI,qBAAKtE,UAAWC,KAAEsE,KAAlB,SACI,sBAAKvE,UAAWC,KAAEuE,KAAlB,UACI,cAAC,EAAD,CAAgB/C,KAAM,OAAQgD,YAAa,QAASnD,MAAO8B,EAAO5C,SAnB5D,SAACY,GACnBiC,EAASjC,EAAEsD,OAAOpD,UAmBN,cAAC,EAAD,CAAaqD,QAhBX,WACdjB,EDemB,SAACN,GAAD,OAAmB,SAACM,GAE3C,OADAA,EAASb,EAAY,YACd2C,EAAoBpC,GACtByB,MAAK,SAAAC,GACiB,MAAfA,EAAIlC,SACJc,EAZ0C,CACtDjC,KAAM,uCACNgG,gBAUkC3C,EAAItC,KAAKkF,OAC/BhE,EAASb,EAAY,kBAG5BkC,OAAM,SAAAC,GACH,IAAMpE,EAAQoE,EAAIC,SACZD,EAAIC,SAASzC,KAAK5B,MACjBoE,EAAIU,QAAU,gCACrBhC,EArBc,SAAC9C,GAAD,MAAoB,CAACa,KAAM,qCAAsCb,SAqBtEyF,CAAWzF,OAEvB0F,SAAQ,WACL5C,EAASb,EAAY,kBC/BhB8E,CAAYvE,IACP,cAAXR,GACCS,EAAS,KAaD,6BAGR,mBAAGrD,UAAWC,KAAEK,KAAhB,sEClCN4B,GAAWC,IAAMC,OAAO,CAE1BC,QAAS,sCACTC,iBAAiB,IAGRsF,GAAc,SACPpF,GACZ,OAAON,GAASO,KAAK,iBAAkBD,ICXzCM,GAAY,CACd+E,cAAc,GAcLC,GAAoB,SAACD,GAAD,MAA4B,CAACpG,KAAM,qCAAsCoG,iB,oBCL7FE,GAAe,WAAO,IAAD,EAEJ5E,mBAAS,IAFL,mBAEvBC,EAFuB,KAEhBC,EAFgB,OAGEF,mBAAS,IAHX,mBAGvBG,EAHuB,KAGbC,EAHa,OAIgBJ,mBAAS,IAJzB,mBAIvB6C,EAJuB,KAINC,EAJM,KAMxBvC,EAAWC,cACXkE,EAAejE,aAAmC,SAAAC,GAAK,OAAIA,EAAMmE,SAASH,gBAC1EjF,EAASgB,aAA6C,SAAAC,GAAK,OAAIA,EAAME,IAAInB,UAyB/E,OAAIiF,EACO,cAAC,IAAD,CAAU7D,GAAIC,GAAKkC,QAGvB,sBAAKnG,UAAWC,KAAEkE,UAAlB,UACS,YAAXvB,GAAwB,cAAC,EAAD,IACzB,cAAC,IAAD,CAAQwB,MAAI,EAAZ,SACI,qBAAKpE,UAAWC,KAAEoE,QAAlB,4BAEJ,cAAC,IAAD,CAAQC,OAAK,EAAb,SACI,sBAAKtE,UAAWC,KAAEsE,KAAlB,UACI,qBAAKvE,UAAWC,KAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,OAAQgD,YAAa,QAASnD,MAAO8B,EAAO5C,SAnC5D,SAACY,GACnBiC,EAASjC,EAAEsD,OAAOpD,YAsCV,qBAAKtB,UAAWC,KAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,WAAYgD,YAAa,WAAYnD,MAAOgC,EAClD9C,SArCP,SAACY,GACtBmC,EAAYnC,EAAEsD,OAAOpD,YAwCb,qBAAKtB,UAAWC,KAAEuE,KAAlB,SACI,cAAC,EAAD,CAAgB/C,KAAM,WAAYgD,YAAa,mBAAoBnD,MAAO0E,EAC1DxF,SAvCA,SAACY,GAC7B6E,EAAmB7E,EAAEsD,OAAOpD,YA0CpB,qBAAKtB,UAAWC,KAAEuE,KAAlB,SACI,cAAC,EAAD,CAAaG,QAxCV,WDdU,IAACsD,ECetB3E,IAAa0C,GACbtC,GDhBsBuE,ECgBK,CAAC7E,QAAOE,YDhB4B,SAACI,GACxEA,EAASb,EAAY,YACrB+E,GAA4BK,GACvBpD,MAAK,SAAAC,GACgB,MAAfA,EAAIlC,QACHc,EAASoE,IAAkB,IAC3BpE,EAASb,EAAY,gBAErBa,EAASoE,IAAkB,IAC3BtB,MAAM1B,EAAIlC,QACVc,EAASb,EAAY,eAG5BkC,OAAM,SAAAC,GAAG,OAAIE,QAAQC,IAAIH,SCItB3B,EAAS,IACTE,EAAY,IACZ0C,EAAmB,KAEnBO,MAAM,2BAiCE,iCCvEP0B,GAAO,WAChB,OAAO,gCACH,cAAC,EAAD,IACA,cAAC,EAAD,qBACA,cAAC,EAAD,Q,oBCDKC,GAAS,WAClB,IAAMpF,EAAaa,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMf,cACrEH,EAASgB,aAA6C,SAAAC,GAAK,OAAIA,EAAME,IAAInB,UAEzEc,EAAWC,cAKjB,OAAO,gCACS,YAAXf,GAAwB,cAAC,EAAD,IACxBG,GAAc,wBAAQ/C,UAAWC,KAAEmI,IAAKzD,QAL9B,WACXjB,GhByBsB,SAACA,GAC3BA,EAASb,EAAY,YACrBN,IACKsC,MAAK,WACFnB,EAASV,GAAQ,IACjBU,EAASb,EAAY,iBAExBkC,OAAM,SAAAC,GACH,IAAMpE,EAAQoE,EAAIC,SACZD,EAAIC,SAASzC,KAAK5B,MACjBoE,EAAIU,QAAU,gCACrBR,QAAQC,IAAIvE,GACZ8C,EAASb,EAAY,kBgBjCV,yBCPVoB,GAAO,CAChBkC,MAAO,SACPkC,aAAc,wBACdnE,QAAS,WACToB,iBAAkB,oBAClBC,aAAc,gBACd+C,KAAM,QACNC,OAAQ,WAKCC,GAAS,WAClB,OAAO,8BACH,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,IAAKC,OAAQ,kBAAM,cAAC,IAAD,CAAU3E,GAAIC,GAAKC,aACzD,cAAC,IAAD,CAAOwE,KAAMzE,GAAKkC,MAAOwC,OAAQ,kBAAM,cAAC,EAAD,OACvC,cAAC,IAAD,CAAOD,KAAMzE,GAAKoE,aAAcM,OAAQ,kBAAM,cAAC,EAAD,OAC9C,cAAC,IAAD,CAAOD,KAAMzE,GAAKC,QAASyE,OAAQ,kBAAM,cAAC,GAAD,OACzC,cAAC,IAAD,CAAOD,KAAMzE,GAAKqB,iBAAkBqD,OAAQ,kBAAM,cAAC,GAAD,OAClD,cAAC,IAAD,CAAOD,KAAMzE,GAAKsB,aAAcoD,OAAQ,kBAAM,cAAC,GAAD,OAC9C,cAAC,IAAD,CAAOD,KAAMzE,GAAKqE,KAAMK,OAAQ,kBAAM,cAAC,GAAD,OACtC,cAAC,IAAD,CAAOD,KAAMzE,GAAKsE,OAAQI,OAAQ,kBAAM,cAAC,GAAD,OAExC,cAAC,IAAD,CAAOA,OAAQ,kBAAM,cAAC,EAAD,a,oBC3BpBC,GAAS,WAClB,IAAM7F,EAAaa,aAAmC,SAAAC,GAAK,OAAIA,EAAMC,MAAMf,cAE3E,OAAO,sBAAK/C,UAAWC,KAAE4I,OAAlB,UACF9F,EAAa,6BACV,sBAAM/C,UAAWC,KAAEuE,KAAnB,SACI,cAAC,IAAD,CAASY,gBAAiBnF,KAAEoF,SAAUrB,GAAIC,GAAKkC,MAA/C,sBAER,sBAAMnG,UAAWC,KAAEuE,KAAnB,SACI,cAAC,IAAD,CAASY,gBAAiBnF,KAAEoF,SAAUrB,GAAIC,GAAKsB,aAA/C,4BAEJ,sBAAMvF,UAAWC,KAAEuE,KAAnB,SACI,cAAC,IAAD,CAASY,gBAAiBnF,KAAEoF,SAAUrB,GAAIC,GAAKC,QAA/C,uBAEJ,+BACI,cAAC,GAAD,UCHG4E,OAbf,WACE,OACE,qBAAK9I,UAAU,MAAf,SACI,eAAC,IAAD,WACA,cAAC,GAAD,IACA,cAAC,GAAD,UCCO+I,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,kBCCRO,GAAWC,aAAgB,CAC7BzF,ItBLsB,WAAoF,IAAnFF,EAAkF,uDAAxDlB,EAAc8G,EAA0C,uCACzG,OAAQA,EAAOhI,MACX,IAAK,iBACD,OAAO,2BAAIoC,GAAX,IAAkBjB,OAAQ6G,EAAO7G,SACrC,IAAK,gBACD,OAAO,2BAAIiB,GAAX,IAAkBjD,MAAO6I,EAAO7I,QACpC,QACI,OAAOiD,IsBDf6C,QdQ0B,WAAiG,IAAhG7C,EAA+F,uDAA9DlB,EAAc8G,EAAgD,uCAC1H,OAAOA,EAAOhI,MACV,IAAK,8BACD,OAAO,2BACAoC,GADP,IAEI6C,QAAS+C,EAAO/C,UAGxB,QACI,OAAO7C,IchBfmE,SRL2B,WAA0E,IAAzEnE,EAAwE,uDAAjDf,GAAW2G,EAAsC,uCACpG,OAAOA,EAAOhI,MACV,IAAK,qCACD,OAAO,2BAAIoC,GAAX,IAAkBgE,aAAc4B,EAAO5B,eAE3C,QACI,OAAOhE,IQAfC,MrBLwB,WAA0E,IAAzED,EAAwE,uDAAjDf,EAAW2G,EAAsC,uCACjG,OAAQA,EAAOhI,MACX,IAAK,sBACD,OAAO,2BAAIoC,GAAX,IAAkBd,WAAY0G,EAAO1G,aAEzC,IAAK,kBACD,OAAO,2BAAIc,GAAX,IAAkBjD,MAAO6I,EAAO7I,QAEpC,QACI,OAAOiD,IqBHf6F,gBXLkC,WAA0E,IAAzE7F,EAAwE,uDAAjDf,GAAW2G,EAAsC,uCAC3G,OAAQA,EAAOhI,MACX,IAAK,qCACD,OAAO,2BACAoC,GADP,IAEIjB,OAAQ6G,EAAO7I,QAGvB,IAAK,uCACD,OAAO,2BACAiD,GADP,IAEIjB,OAAQ6G,EAAOhC,kBAGvB,QACI,OAAO5D,IWTf8B,YjBN8B,WAA0E,IAAzE9B,EAAwE,uDAAjDf,EAAW2G,EAAsC,uCACvG,OAAQA,EAAOhI,MACX,IAAK,iCACD,OAAO,2BACAoC,GADP,IAEIjD,MAAO6I,EAAO7I,QAEtB,IAAK,mCACD,OAAO,2BACAiD,GADP,IAEIiC,eAAgB2D,EAAOrD,UAE/B,QACI,OAAOvC,MiBJb8F,GAAQC,aAAYL,GAAUM,aAAgBC,OAErCH,MAIfI,OAAOJ,MAAQA,GCjBfK,IAASrB,OACP,cAAC,IAAD,CAAUgB,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFM,SAASC,eAAe,SAM1BnB,O","file":"static/js/main.783e5f8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Login_mainBlock__2Hnsf\",\"heading\":\"Login_heading__2uUNe\",\"form\":\"Login_form__YUnFu\",\"item\":\"Login_item__8ruFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Registration_mainBlock__2-tPy\",\"heading\":\"Registration_heading__1ikXU\",\"form\":\"Registration_form__2vKhD\",\"item\":\"Registration_item__2OvGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10E-F\",\"item\":\"Header_item__2jxiJ\",\"selected\":\"Header_selected__1gq-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"NewPassword_mainBlock__18qO6\",\"heading\":\"NewPassword_heading__1yeBX\",\"form\":\"NewPassword_form__GI_Wx\",\"item\":\"NewPassword_item__JkpR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Profile_mainBlock__2EuSJ\",\"profileImage\":\"Profile_profileImage__V14iU\",\"item\":\"Profile_item__1iv2e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"RecoverPassword_mainBlock__36Kk5\",\"heading\":\"RecoverPassword_heading__2PBQ9\",\"form\":\"RecoverPassword_form__2SbKz\",\"item\":\"RecoverPassword_item__hD7wO\",\"text\":\"RecoverPassword_text__17f5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"Error_textContainer__33KNz\",\"img\":\"Error_img__1DIRY\",\"text\":\"Error_text__1aWPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Dvnc\",\"errorInput\":\"SuperInputText_errorInput__2KNWh\",\"error\":\"SuperInputText_error__39NON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__BWIdw\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Sm-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2uC1O\",\"red\":\"SuperButton_red__3Lo1u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Logout_btn__1z6vx\"};","export default __webpack_public_path__ + \"static/media/404-Error.f783912e.jpg\";","import React from 'react';\r\nimport s from './Error.module.css';\r\nimport err404 from '../../assets/images/404-Error.jpg'\r\n\r\nexport const Error = () => {\r\n\r\n    return <div className={s.textContainer}>\r\n        <div className={s.img} >\r\n            <img src={err404} />\r\n        </div>\r\n            <div className={s.text}>\r\n                Error 404: page donut found :(\r\n            </div>\r\n\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError?: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError &&setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import axios from 'axios';\r\n\r\nexport type LoginDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\",\r\n    // baseURL: \"http://localhost:7542/2.0/\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    withCredentials: true\r\n})\r\n\r\nexport const loginAPI = {\r\n    login (data: LoginDataType) {\r\n        return instance.post('auth/login', data)\r\n    },\r\n    logout () {\r\n        return instance.delete('auth/me')\r\n    },\r\n}","\r\nconst initialState = {\r\n    status: 'idle' as RequestStatusType,\r\n    error: null\r\n}\r\n\r\nexport const appReducer = (state: InitialStateType = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET-STATUS':\r\n            return {...state, status: action.status}\r\n        case 'APP/SET-ERROR':\r\n            return {...state, error: action.error}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const setStatusAC = (status: RequestStatusType) => {\r\n    return {\r\n        type: 'APP/SET-STATUS',\r\n        status\r\n    } as const\r\n}\r\nexport const setErrorAC = (error: string | null) => {\r\n    return {\r\n        type: 'APP/SET-ERROR',\r\n        error\r\n    } as const\r\n}\r\n\r\n//types\r\ntype ActionsType = ReturnType<typeof setStatusAC |typeof setErrorAC>\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype InitialStateType = {\r\n    status: RequestStatusType,\r\n    error: string | null\r\n}","import {Dispatch} from \"redux\"\r\nimport {loginAPI, LoginDataType} from \"../api/api-login\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\nconst initState = {\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"LOGIN-REDUCER/LOGIN\": {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case \"LOGIN/SET_ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const loginAC = (isLoggedIn: boolean) => ({type: \"LOGIN-REDUCER/LOGIN\", isLoggedIn} as const)\r\nexport const setLoginErrorAC = (error: string) => ({type: \"LOGIN/SET_ERROR\", error} as const)\r\n\r\n//thunks\r\nexport const loginTC = (loginData: LoginDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    loginAPI.login(loginData)\r\n        .then(res => {\r\n            dispatch(loginAC(true))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setLoginErrorAC(err.response.data.error + ' more details in the console'))\r\n            console.log('Error:', {...err})\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\nexport const logoutTC = () => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    loginAPI.logout()\r\n        .then(() => {\r\n            dispatch(loginAC(false))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n            dispatch(setStatusAC('failed'))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof loginAC | typeof setLoginErrorAC>","import React from 'react'\r\n// import s from './Loader.css'\r\nimport './Loader.css'\r\n\r\nexport const Loader = () => {\r\n\r\n    return (\r\n        <div className='loader-wrap'>\r\n            <div className=\"lds-ellipsis\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport s from './Login.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport {loginTC} from \"../../redux/login-reducer\";\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\nimport {Loader} from \"../../common/Loader/Loader\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const loginClickHandler = () => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        {status === 'loading' && <Loader />}\r\n        {error ? error : \"\"}\r\n        <Bounce left>\r\n            <div className={s.heading}>Log In</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <span>Remember me</span>\r\n                    <SuperCheckbox checked={rememberMe} onChange={onChangeRememberMe}/>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={loginClickHandler}>Log In</SuperButton>\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.selected} to={PATH.RECOVER_PASSWORD}>Forgot password?</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Don't have profile? Sign up.</NavLink>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const passwordAPI = {\r\n    recover(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"alexbushueva27@gmail.com\",\r\n            message: `<div style=\"background-color: #ffb7d5; padding: 15px border-radius: 20px\">\r\n                    password recovery link: \r\n                        <a href='https://itsmeshusha.github.io/IncFriday/#/new-password/$token$'>link</a>\r\n                    </div>\r\n                    `\r\n        })\r\n    },\r\n    newPassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('/auth/set-new-password',\r\n            {\r\n                password: newPassword,\r\n                resetPasswordToken: token\r\n            })\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'NEW-PASSWORD-REDUCER/SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'NEW-PASSWORD-REDUCER/SET_SUCCESS':\r\n            return {\r\n                ...state,\r\n                successMessage: action.success\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (success: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_SUCCESS', success} as const)\r\n\r\n//thunks\r\nexport const sendNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    passwordAPI.newPassword(newPassword, token)\r\n        .then(res => {\r\n            dispatch(setSuccessAC(res.data.message))\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {sendNewPasswordTC} from \"../../redux/new-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './NewPassword.module.css'\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {PATH} from \"../../Routes\";\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport {Loader} from \"../../common/Loader/Loader\";\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\n\r\ntype ParamTypes = {\r\n    token: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const {token} = useParams<ParamTypes>()\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const setNewPassword = () => {\r\n\r\n        if (password === confirmPassword) {\r\n            dispatch(sendNewPasswordTC(password, token))\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (status === 'succeeded') {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return <div className={s.mainBlock}>\r\n        {status === 'loading' && <Loader />}\r\n        <Bounce left>\r\n            <div className={s.heading}>New Password</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={confirmPassword}\r\n                                    onChange={onChangeConfirmPassword}/>\r\n\r\n                </div>\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={setNewPassword}>Set password</SuperButton>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0/\", //сам сервер\r\n    // baseURL: \"http://localhost:7542/2.0/\", //сам сервер\r\n    withCredentials: true\r\n})\r\n\r\nexport const authAPI = {\r\n    me () {\r\n        return instance.post('auth/me')\r\n    },\r\n    updateMe (name: string | null, avatar: string | null) {\r\n        return instance.put('auth/me', {\r\n            name,\r\n            avatar\r\n        })\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {authAPI} from \"../api/api-auth\";\r\nimport {loginAC} from \"./login-reducer\";\r\n\r\nconst initialState: ProfileInitialStateType = {\r\n    profile: {\r\n        _id: null,\r\n        email: null,\r\n        name: null,\r\n        avatar: null,\r\n        publicCardPacksCount: null,\r\n        created: null,\r\n        updated: null,\r\n        isAdmin: null,\r\n        verified: null,\r\n        rememberMe: null,\r\n        error: null\r\n    }\r\n}\r\n\r\nexport const profileReducer = (state: ProfileInitialStateType = initialState, action: ActionType): ProfileInitialStateType => {\r\n    switch(action.type) {\r\n        case \"PROFILE-REDUCER/SET_PROFILE\": {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const setProfileAC = (profile: ProfileType) => ({type: \"PROFILE-REDUCER/SET_PROFILE\", profile} as const)\r\n\r\n\r\n//thunks\r\nexport const authMeTC = () => (dispatch: Dispatch) => {\r\n    return authAPI.me()\r\n        .then(res => {\r\n                dispatch(setProfileAC(res.data))\r\n\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console');\r\n            console.log(error)\r\n        })\r\n}\r\n\r\n\r\n//types\r\ntype ActionType = ReturnType<typeof setProfileAC >\r\nexport type ProfileInitialStateType = {\r\n    profile: ProfileType\r\n}\r\nexport type ProfileType = {\r\n    _id: string | null\r\n    email: string | null\r\n    name: string | null\r\n    avatar: string | null\r\n    publicCardPacksCount: number | null\r\n    created: string | null\r\n    updated: string | null\r\n    isAdmin: boolean | null\r\n    verified: boolean | null\r\n    rememberMe: boolean | null\r\n    error: string | null\r\n}","export default __webpack_public_path__ + \"static/media/user.fd39d1b5.png\";","import React, {useEffect} from 'react';\r\nimport s from './Profile.module.css';\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {authMeTC, ProfileType} from \"../../redux/profile-reducer\";\r\nimport user from \"../../assets/images/user.png\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../Routes\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {logoutTC} from \"../../redux/login-reducer\";\r\n\r\nexport const Profile = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const profile = useSelector<AppStoreType, ProfileType>(state => state.profile.profile)\r\n\r\n    const dispatch = useDispatch()\r\n    useEffect(() => {\r\n        if (isLoggedIn) {\r\n            dispatch(authMeTC())\r\n        }\r\n    }, [isLoggedIn, dispatch])\r\n\r\n    if(!isLoggedIn) {\r\n        return <Redirect to={PATH.LOGIN} />\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        <div className={s.profile}>\r\n            <div className={s.profileImage}>\r\n                <img src={profile.avatar ? profile.avatar : user} alt='userPhoto'/>\r\n            </div>\r\n            <div className={s.item}>\r\n                id: {profile._id}\r\n            </div>\r\n            <div className={s.item}>\r\n                email: {profile.email}\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const recoverPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                status: action.error\r\n            }\r\n        }\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                status: action.recoverySuccess\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setErrorAC = (error: string) => ({type: 'RECOVER-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (recoverySuccess: string) => ({\r\n    type: 'RECOVER-PASSWORD-REDUCER/SET_SUCCESS',\r\n    recoverySuccess\r\n} as const)\r\n\r\n\r\n//thunks\r\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    return passwordAPI.recover(email)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(setSuccessAC(res.data.info))\r\n                dispatch(setStatusAC('succeeded'))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setStatusAC('succeeded'))\r\n        })\r\n\r\n}\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC >","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {sendEmailTC} from \"../../redux/recover-password-reducer\";\r\nimport s from './RecoverPassword.module.css'\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\nimport {Loader} from \"../../common/Loader/Loader\";\r\n\r\nexport const RecoverPassword = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(sendEmailTC(email))\r\n        if(status === 'succeeded') {\r\n            setEmail(\"\")\r\n        }\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        {status === 'loading' && <Loader />}\r\n        <Bounce left>\r\n            <div className={s.heading}>Forgot Password?</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n                    <SuperButton onClick={sendEmail}>Send email</SuperButton>\r\n                </div>\r\n            </div>\r\n            <p className={s.text}>On your email we'll send a link. Please click it.</p>\r\n        </Bounce>\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\nexport type RegisterNewUserDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    // baseURL: \"http://localhost:7542/2.0\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\", //сам сервер https://neko-back.herokuapp.com/2.0\r\n    withCredentials: true\r\n})\r\n\r\nexport const registerAPI = {\r\n    registerNewUser(data: RegisterNewUserDataType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerAPI, RegisterNewUserDataType} from \"../api/api-register\";\r\nimport {setStatusAC} from \"./app-reducer\";\r\n\r\nconst initState = {\r\n    isRegistered: false\r\n}\r\n\r\nexport const registerReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch(action.type) {\r\n        case \"REGISTER-REDUCER/REGISTER-NEW-USER\": {\r\n            return {...state, isRegistered: action.isRegistered}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const registerNewUserAC = (isRegistered: boolean) => ({type: \"REGISTER-REDUCER/REGISTER-NEW-USER\", isRegistered} as const)\r\n\r\n//thunks\r\nexport const registerNewUserTC = (newUserData: RegisterNewUserDataType) => (dispatch: Dispatch) => {\r\n    dispatch(setStatusAC('loading'))\r\n    registerAPI.registerNewUser(newUserData)\r\n        .then(res => {\r\n            if(res.status === 201){\r\n                dispatch(registerNewUserAC(true))\r\n                dispatch(setStatusAC('succeeded'))\r\n            } else {\r\n                dispatch(registerNewUserAC(false))\r\n                alert(res.status)\r\n                dispatch(setStatusAC('failed'))\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof registerNewUserAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {registerNewUserTC} from \"../../redux/register-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Registration.module.css\"\r\n//@ts-ignore\r\nimport Bounce from 'react-reveal/Bounce';\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\nimport {Loader} from \"../../common/Loader/Loader\";\r\n\r\nexport const Registration = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.register.isRegistered)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const addNewUser = () => {\r\n        if (password === confirmPassword) {\r\n            dispatch(registerNewUserTC({email, password}))\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setConfirmPassword(\"\")\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        {status === 'loading' && <Loader />}\r\n        <Bounce left>\r\n            <div className={s.heading}>Registration</div>\r\n        </Bounce>\r\n        <Bounce right>\r\n            <div className={s.form}>\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                    onChange={onChangePassword}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperInputText type={\"password\"} placeholder={\"confirm password\"} value={confirmPassword}\r\n                                    onChange={onChangeConfirmPassword}/>\r\n\r\n                </div>\r\n\r\n                <div className={s.item}>\r\n                    <SuperButton onClick={addNewUser}>Register</SuperButton>\r\n                </div>\r\n            </div>\r\n        </Bounce>\r\n    </div>\r\n}","import React from 'react'\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText />\r\n        <SuperButton>Button</SuperButton>\r\n        <SuperCheckbox />\r\n    </div>\r\n}","import React from 'react';\r\nimport s from './Logout.module.css'\r\nimport {logoutTC} from \"../../redux/login-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {Loader} from \"../../common/Loader/Loader\";\r\nimport {RequestStatusType} from \"../../redux/app-reducer\";\r\n\r\nexport const Logout = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const status = useSelector<AppStoreType, RequestStatusType>(state => state.app.status)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logout = () => {\r\n        dispatch(logoutTC())\r\n    }\r\n    return <div>\r\n        {status === 'loading' && <Loader />}\r\n        {isLoggedIn && <button className={s.btn} onClick={logout}>Log Out</button>}\r\n    </div>\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport {Error} from './pages/404/Error';\r\nimport {Login} from \"./pages/Login/Login\";\r\nimport {NewPassword} from \"./pages/NewPassword/NewPassword\";\r\nimport {Profile} from \"./pages/Profile/Profile\";\r\nimport {RecoverPassword} from \"./pages/RecoverPassword/RecoverPassword\";\r\nimport {Registration} from \"./pages/Registration/Registration\";\r\nimport {Test} from \"./pages/Test/Test\";\r\nimport {Logout} from \"./pages/Logout/Logout\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password/:token?\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    REGISTRATION: \"/registration\",\r\n    TEST: \"/test\",\r\n    LOGOUT: \"/logout\"\r\n}\r\n\r\n//Routes\r\n\r\nexport const Routes = () => {\r\n    return <div>\r\n        <Switch>\r\n            <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE} />} />\r\n            <Route path={PATH.LOGIN} render={() => <Login />} />\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n            <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n            <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n            <Route path={PATH.TEST} render={() => <Test />} />\r\n            <Route path={PATH.LOGOUT} render={() => <Logout /> } />\r\n\r\n            <Route render={() => <Error />} />\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Header.module.css\"\r\nimport {Logout} from \"../../pages/Logout/Logout\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\n\r\n\r\nexport const Header = () => {\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n\r\n    return <div className={s.header}>\r\n        {isLoggedIn ? <></> :\r\n            <span className={s.item}>\r\n                <NavLink activeClassName={s.selected} to={PATH.LOGIN}>Log In</NavLink>\r\n            </span>}\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Registration</NavLink>\r\n        </span>\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.PROFILE}>Profile</NavLink>\r\n        </span>\r\n        <span>\r\n            <Logout/>\r\n        </span>\r\n    </div>\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./common/Header/Header\";\r\nimport {Routes} from \"./Routes\";\r\nimport {Initialize} from \"./common/Initialize/Initialize\";\r\nimport {Loader} from \"./common/Loader/Loader\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <HashRouter>\r\n        <Header />\r\n        <Routes />\r\n            {/*<Initialize />*/}\r\n            {/*<Loader />*/}\r\n        </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, createStore} from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {recoverPasswordReducer} from \"./recover-password-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\nimport {appReducer} from \"./app-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    app: appReducer,\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    login: loginReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}