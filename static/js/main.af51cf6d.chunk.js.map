{"version":3,"sources":["pages/Login/Login.module.css","common/Header/Header.module.css","pages/NewPassword/NewPassword.module.css","pages/Registration/Registration.module.css","pages/RecoverPassword/RecoverPassword.module.css","common/SuperInputText/SuperInputText.module.css","pages/404/Error.module.css","common/SuperCheckbox/SuperCheckbox.module.css","common/SuperButton/SuperButton.module.css","pages/404/Error.tsx","common/SuperInputText/SuperInputText.tsx","common/SuperCheckbox/SuperCheckbox.tsx","common/SuperButton/SuperButton.tsx","api/api-login.ts","redux/login-reducer.ts","pages/Login/Login.tsx","api/api-recover-password.ts","redux/new-password-reducer.ts","pages/NewPassword/NewPassword.tsx","pages/Profile/Profile.tsx","redux/recover-password-reducer.ts","pages/RecoverPassword/RecoverPassword.tsx","api/api-register.ts","redux/register-reducer.ts","pages/Registration/Registration.tsx","pages/Test/Test.tsx","Routes.tsx","common/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/profile-reducer.ts","redux/store.ts","index.tsx"],"names":["module","exports","Error","className","s","textContainer","text","SuperInputText","onChange","onChangeText","onKeyPress","onEnter","error","spanClassName","setError","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","e","currentTarget","value","key","SuperCheckbox","type","onChangeChecked","children","checkbox","checked","SuperButton","red","finalClassName","default","instance","axios","create","baseURL","loginAPI","data","post","initState","isLoggedIn","Login","useState","email","setEmail","password","setPassword","rememberMe","setRememberMe","dispatch","useDispatch","useSelector","state","login","to","PATH","PROFILE","mainBlock","heading","form","item","placeholder","target","onClick","loginData","then","res","catch","err","response","console","log","activeClassName","selected","RECOVER_PASSWORD","REGISTRATION","withCredentials","passwordAPI","from","message","newPassword","token","resetPasswordToken","status","successMessage","setAppStatusAC","NewPassword","confirmPassword","setConfirmPassword","useParams","LOGIN","success","setErrorAC","finally","sendNewPasswordTC","alert","Profile","setRecoveryStatusAC","RecoverPassword","recoverySuccess","info","sendEmailTC","registerAPI","isRegistered","registerNewUserAC","Registration","register","newUserData","Test","NEW_PASSWORD","TEST","Routes","exact","path","render","Header","header","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","profile","action","recoverPassword","store","createStore","applyMiddleware","thunkMiddleware","window","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.af51cf6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Login_mainBlock__2Hnsf\",\"heading\":\"Login_heading__2uUNe\",\"form\":\"Login_form__YUnFu\",\"item\":\"Login_item__8ruFX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__10E-F\",\"item\":\"Header_item__2jxiJ\",\"selected\":\"Header_selected__1gq-3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"NewPassword_mainBlock__18qO6\",\"heading\":\"NewPassword_heading__1yeBX\",\"form\":\"NewPassword_form__GI_Wx\",\"item\":\"NewPassword_item__JkpR3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Registration_mainBlock__2-tPy\",\"form\":\"Registration_form__2vKhD\",\"item\":\"Registration_item__2OvGO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"RecoverPassword_mainBlock__36Kk5\",\"heading\":\"RecoverPassword_heading__2PBQ9\",\"form\":\"RecoverPassword_form__2SbKz\",\"item\":\"RecoverPassword_item__hD7wO\",\"text\":\"RecoverPassword_text__17f5i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__1Dvnc\",\"errorInput\":\"SuperInputText_errorInput__2KNWh\",\"error\":\"SuperInputText_error__39NON\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"textContainer\":\"Error_textContainer__33KNz\",\"text\":\"Error_text__1aWPg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__BWIdw\",\"spanClassName\":\"SuperCheckbox_spanClassName__3Sm-t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__2uC1O\",\"red\":\"SuperButton_red__3Lo1u\"};","import React from 'react';\r\nimport s from './Error.module.css';\r\n\r\nexport const Error = () => {\r\n    return <div className={s.textContainer}>\r\n\r\n        <div className={s.text}>\r\n            Error 404: page don't found :(\r\n        </div>\r\n    </div>\r\n}\r\n\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInputText.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    setError?: (error: string) => void\n};\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n    {\n\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n        setError,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n        setError &&setError(\"\")\n    \n    }\n    \n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = error ? s.errorInput : s.superInput; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInputText;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e); \n\n        onChangeChecked && onChangeChecked(e.currentTarget.checked);\n        \n        // сделайте так чтоб работал onChange и onChangeChecked\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import axios from 'axios';\r\n\r\nexport type LoginDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\" //сам сервер https://neko-back.herokuapp.com/2.0\r\n})\r\n\r\nexport const loginAPI = {\r\n    login (data: LoginDataType) {\r\n        return instance.post('auth/login', data)\r\n    }\r\n}","import { Dispatch } from \"redux\"\r\nimport {loginAPI, LoginDataType} from \"../api/api-login\";\r\n\r\nconst initState = {\r\n    isLoggedIn: false,\r\n    error: ''\r\n}\r\n\r\nexport const loginReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch(action.type) {\r\n        case \"LOGIN-REDUCER/LOGIN\": {\r\n            return {...state, isLoggedIn: action.isLoggedIn}\r\n        }\r\n        case \"LOGIN/SET_ERROR\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//AC\r\nexport const loginAC = (isLoggedIn: boolean) => ({type: \"LOGIN-REDUCER/LOGIN\", isLoggedIn} as const)\r\nexport const setLoginErrorAC = (error: string) => ({type: \"LOGIN/SET_ERROR\", error} as const)\r\n\r\n//thunks\r\nexport const loginTC = (loginData: LoginDataType) => (dispatch: Dispatch) => {\r\n    loginAPI.login(loginData)\r\n        .then(res => {\r\n            dispatch(loginAC(true))\r\n        })\r\n        .catch(err => {\r\n            dispatch(setLoginErrorAC(err.response.data.error + ' more details in the console'))\r\n            console.log('Error:', { ...err })\r\n        })\r\n}\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof loginAC | typeof setLoginErrorAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport s from './Login.module.css'\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport {loginTC} from \"../../redux/login-reducer\";\r\n\r\nexport const Login = () => {\r\n    const [email, setEmail] = useState<string>(\"\")\r\n    const [password, setPassword] = useState<string>(\"\")\r\n    const [rememberMe, setRememberMe] = useState<boolean>(false)\r\n\r\n    const dispatch = useDispatch()\r\n    const isLoggedIn = useSelector<AppStoreType, boolean>(state => state.login.isLoggedIn)\r\n    const error = useSelector<AppStoreType, string>(state => state.login.error)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeRememberMe = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setRememberMe(e.target.checked)\r\n    }\r\n\r\n    const loginClickHandler = () => {\r\n        dispatch(loginTC({email, password, rememberMe}))\r\n    }\r\n\r\n    if (isLoggedIn) {\r\n        return <Redirect to={PATH.PROFILE}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        {error ? error : \"\"}\r\n        <div className={s.heading}>Log In</div>\r\n        <div className={s.form}>\r\n            <div className={s.item}>\r\n                <div>Enter email</div>\r\n                <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n            </div>\r\n            <div className={s.item}>\r\n                <div>Enter password</div>\r\n                <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                onChange={onChangePassword}/>\r\n            </div>\r\n            <div className={s.item}>\r\n                <span>Remember me</span>\r\n                <SuperCheckbox checked={rememberMe} onChange={onChangeRememberMe}/>\r\n            </div>\r\n            <div className={s.item}>\r\n                <SuperButton onClick={loginClickHandler}>Log In</SuperButton>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.selected} to={PATH.RECOVER_PASSWORD}>Forgot password?</NavLink>\r\n            </div>\r\n            <div className={s.item}>\r\n                <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Don't have profile? Sign up.</NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"https://neko-back.herokuapp.com/2.0\",\r\n    withCredentials: true\r\n})\r\n\r\nexport const passwordAPI = {\r\n    recover(email: string) {\r\n        return instance.post(\"/auth/forgot\", {\r\n            email,\r\n            from: \"alexbushueva27@gmail.com\",\r\n            message: `<div style=\"background-color: #ffb7d5; padding: 15px border-radius: 20px\">\r\n                    password recovery link: \r\n                        <a href='http://localhost:3000/#/new-password/$token$'>link</a>\r\n                    </div>\r\n                    `\r\n        })\r\n    },\r\n    newPassword(newPassword: string, token: string | undefined) {\r\n        return instance.post('/auth/set-new-password',\r\n            {\r\n                password: newPassword,\r\n                resetPasswordToken: token\r\n            })\r\n\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const newPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case 'NEW-PASSWORD-REDUCER/SET_ERROR':\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            }\r\n        case 'NEW-PASSWORD-REDUCER/SET_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        case 'NEW-PASSWORD-REDUCER/SET_SUCCESS':\r\n            return {\r\n                ...state,\r\n                successMessage: action.success\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n// actions\r\nexport const setErrorAC = (error: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (success: string) => ({type: 'NEW-PASSWORD-REDUCER/SET_SUCCESS', success} as const)\r\nexport const setAppStatusAC = (status: RequestStatusType) => ({type: 'NEW-PASSWORD-REDUCER/SET_STATUS',status} as const)\r\n\r\n//thunks\r\nexport const sendNewPasswordTC = (newPassword: string, token: string) => (dispatch: Dispatch) => {\r\n    dispatch(setAppStatusAC('loading'))\r\n    passwordAPI.newPassword(newPassword, token)\r\n        .then(res => {\r\n            dispatch(setSuccessAC(res.data.message))\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setAppStatusAC('succeeded'))\r\n        })\r\n}\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC | typeof setAppStatusAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {Redirect, useParams} from 'react-router-dom';\r\nimport {sendNewPasswordTC} from \"../../redux/new-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport s from './NewPassword.module.css'\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {PATH} from \"../../Routes\";\r\n\r\ntype ParamTypes = {\r\n    token: string\r\n}\r\n\r\nexport const NewPassword = () => {\r\n\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n    const {token} = useParams<ParamTypes>()\r\n    const dispatch = useDispatch()\r\n    const status = useSelector<AppStoreType, string>(state => state.newPassword.status)\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const setNewPassword = () => {\r\n\r\n        if (password === confirmPassword) {\r\n            console.log(token)\r\n            dispatch(sendNewPasswordTC(password, token))\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (status === 'succeeded') {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n\r\n    return <div className={s.mainBlock}>\r\n\r\n        <div className={s.heading}>New Password</div>\r\n        <div className={s.form}>\r\n            <div className={s.item}>\r\n                <span>Enter new password</span>\r\n                <SuperInputText type={\"password\"} placeholder={\"password\"} value={password}\r\n                                onChange={onChangePassword}/>\r\n\r\n            </div>\r\n            <div className={s.item}>\r\n                <span>Confirm new password</span>\r\n                <SuperInputText type={\"password\"} placeholder={\"password\"} value={confirmPassword}\r\n                                onChange={onChangeConfirmPassword}/>\r\n\r\n            </div>\r\n            <div className={s.item}>\r\n                <SuperButton onClick={setNewPassword}>Set password</SuperButton>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n}","import React from 'react'\r\n\r\nexport const Profile = () => {\r\n    return <div>\r\n        Profile\r\n    </div>\r\n}","import {Dispatch} from \"redux\"\r\nimport {passwordAPI} from \"../api/api-recover-password\";\r\n\r\nconst initState = {\r\n    status: 'idle',\r\n    error: '',\r\n    successMessage: ''\r\n}\r\n\r\nexport const recoverPasswordReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch (action.type) {\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_ERROR\": {\r\n            return {\r\n                ...state,\r\n                status: action.error\r\n            }\r\n        }\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_SUCCESS\": {\r\n            return {\r\n                ...state,\r\n                status: action.recoverySuccess\r\n            }\r\n        }\r\n        case \"RECOVER-PASSWORD-REDUCER/SET_RECOVERY_STATUS\": {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const setErrorAC = (error: string) => ({type: 'RECOVER-PASSWORD-REDUCER/SET_ERROR', error} as const)\r\nexport const setSuccessAC = (recoverySuccess: string) => ({\r\n    type: 'RECOVER-PASSWORD-REDUCER/SET_SUCCESS',\r\n    recoverySuccess\r\n} as const)\r\nexport const setRecoveryStatusAC = (status: RequestStatusType) => ({\r\n    type: 'RECOVER-PASSWORD-REDUCER/SET_RECOVERY_STATUS',\r\n    status\r\n} as const)\r\n\r\n//thunks\r\nexport const sendEmailTC = (email: string) => (dispatch: Dispatch) => {\r\n    dispatch(setRecoveryStatusAC('loading'))\r\n    return passwordAPI.recover(email)\r\n        .then(res => {\r\n            if (res.status === 200) {\r\n                dispatch(setSuccessAC(res.data.info))\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const error = err.response\r\n                ? err.response.data.error\r\n                : (err.message + ', more details in the console')\r\n            dispatch(setErrorAC(error))\r\n        })\r\n        .finally(() => {\r\n            dispatch(setRecoveryStatusAC('succeeded'))\r\n        })\r\n\r\n}\r\n\r\n//types\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof setErrorAC | typeof setSuccessAC | typeof setRecoveryStatusAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {sendEmailTC} from \"../../redux/recover-password-reducer\";\r\nimport s from './RecoverPassword.module.css'\r\n\r\nexport const RecoverPassword = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const dispatch = useDispatch()\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const sendEmail = () => {\r\n        dispatch(sendEmailTC(email))\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        <div className={s.heading}>Forgot Password?</div>\r\n        <div className={s.form}>\r\n            <div className={s.item}>\r\n                <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n                <SuperButton onClick={sendEmail}>Send email</SuperButton>\r\n            </div>\r\n        </div>\r\n        <p className={s.text}>On your email we'll send a link. Please click it.</p>\r\n\r\n    </div>\r\n}","import axios from 'axios';\r\n\r\nexport type RegisterNewUserDataType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nconst instance = axios.create({\r\n    baseURL: \"http://localhost:7542/2.0/\" //сам сервер https://neko-back.herokuapp.com/2.0\r\n})\r\n\r\nexport const registerAPI = {\r\n    registerNewUser(data: RegisterNewUserDataType) {\r\n        return instance.post(\"/auth/register\", data)\r\n    }\r\n}","import {Dispatch} from \"redux\";\r\nimport {registerAPI, RegisterNewUserDataType} from \"../api/api-register\";\r\n\r\nconst initState = {\r\n    isRegistered: false\r\n}\r\n\r\nexport const registerReducer = (state: InitStateType = initState, action: ActionType): InitStateType => {\r\n    switch(action.type) {\r\n        case \"REGISTER-REDUCER/REGISTER-NEW-USER\": {\r\n            return {...state, isRegistered: action.isRegistered}\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const registerNewUserAC = (isRegistered: boolean) => ({type: \"REGISTER-REDUCER/REGISTER-NEW-USER\", isRegistered} as const)\r\n\r\n//thunks\r\nexport const registerNewUserTC = (newUserData: RegisterNewUserDataType) => (dispatch: Dispatch) => {\r\n    registerAPI.registerNewUser(newUserData)\r\n        .then(res => {\r\n            if(res.status === 201){\r\n                dispatch(registerNewUserAC(true))\r\n            } else {\r\n                dispatch(registerNewUserAC(false))\r\n                alert(res.status)\r\n            }\r\n        })\r\n        .catch(err => console.log(err))\r\n}\r\n\r\n\r\n//types\r\ntype InitStateType = typeof initState\r\ntype ActionType = ReturnType<typeof registerNewUserAC>","import React, {ChangeEvent, useState} from 'react'\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppStoreType} from \"../../redux/store\";\r\nimport {registerNewUserTC} from \"../../redux/register-reducer\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Registration.module.css\"\r\n\r\nexport const Registration = () => {\r\n\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const dispatch = useDispatch()\r\n    const isRegistered = useSelector<AppStoreType, boolean>(state => state.register.isRegistered)\r\n\r\n    const onChangeEmail = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value)\r\n    }\r\n\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const onChangeConfirmPassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setConfirmPassword(e.target.value)\r\n    }\r\n\r\n    const addNewUser = () => {\r\n        if (password === confirmPassword) {\r\n            dispatch(registerNewUserTC({email, password}))\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setConfirmPassword(\"\")\r\n        } else {\r\n            alert(\"Passwords don't match!\")\r\n        }\r\n    }\r\n\r\n    if (isRegistered) {\r\n        return <Redirect to={PATH.LOGIN}/>\r\n    }\r\n\r\n    return <div className={s.mainBlock}>\r\n        <div className={s.form}>\r\n            <div className={s.item}>\r\n                <div>Enter email</div>\r\n                <SuperInputText type={\"text\"} placeholder={\"email\"} value={email} onChange={onChangeEmail}/>\r\n\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <div>Enter password</div>\r\n                <SuperInputText type={\"password\"} placeholder={\"password\"} value={password} onChange={onChangePassword}/>\r\n\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <div>Confirm password</div>\r\n                <SuperInputText type={\"password\"} placeholder={\"confirm password\"} value={confirmPassword}\r\n                                onChange={onChangeConfirmPassword}/>\r\n\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <SuperButton onClick={addNewUser}>Register</SuperButton>\r\n            </div>\r\n        </div>\r\n    </div>\r\n}","import React from 'react'\r\nimport SuperButton from \"../../common/SuperButton/SuperButton\";\r\nimport SuperCheckbox from \"../../common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"../../common/SuperInputText/SuperInputText\";\r\n\r\nexport const Test = () => {\r\n    return <div>\r\n        <SuperInputText />\r\n        <SuperButton>Button</SuperButton>\r\n        <SuperCheckbox />\r\n    </div>\r\n}","import React from 'react'\r\nimport {Redirect, Route, Switch } from 'react-router-dom'\r\nimport {Error} from './pages/404/Error';\r\nimport {Login} from \"./pages/Login/Login\";\r\nimport {NewPassword} from \"./pages/NewPassword/NewPassword\";\r\nimport {Profile} from \"./pages/Profile/Profile\";\r\nimport {RecoverPassword} from \"./pages/RecoverPassword/RecoverPassword\";\r\nimport {Registration} from \"./pages/Registration/Registration\";\r\nimport {Test} from \"./pages/Test/Test\";\r\n\r\n\r\nexport const PATH = {\r\n    LOGIN: \"/login\",\r\n    NEW_PASSWORD: \"/new-password/:token?\",\r\n    PROFILE: \"/profile\",\r\n    RECOVER_PASSWORD: \"/recover-password\",\r\n    REGISTRATION: \"/registration\",\r\n    TEST: \"/test\"\r\n}\r\n\r\n//Routes\r\n\r\nexport const Routes = () => {\r\n    return <div>\r\n        <Switch>\r\n            <Route exact path={\"/\"} render={() => <Redirect to={PATH.PROFILE} />} />\r\n            <Route path={PATH.LOGIN} render={() => <Login />} />\r\n            <Route path={PATH.NEW_PASSWORD} render={() => <NewPassword />} />\r\n            <Route path={PATH.PROFILE} render={() => <Profile />} />\r\n            <Route path={PATH.RECOVER_PASSWORD} render={() => <RecoverPassword />} />\r\n            <Route path={PATH.REGISTRATION} render={() => <Registration />} />\r\n            <Route path={PATH.TEST} render={() => <Test />} />\r\n\r\n            <Route render={() => <Error />} />\r\n        </Switch>\r\n    </div>\r\n}","import React from 'react'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"../../Routes\";\r\nimport s from \"./Header.module.css\"\r\n\r\n\r\nexport const Header = () => {\r\n    return <div className={s.header}>\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.LOGIN}>Log In</NavLink>\r\n        </span>\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.REGISTRATION}>Registration</NavLink>\r\n        </span>\r\n        {/*<span className={s.item}>*/}\r\n        {/*    <NavLink activeClassName={s.selected} to={PATH.RECOVER_PASSWORD}>Recover Password</NavLink>*/}\r\n        {/*</span>*/}\r\n        {/*<span className={s.item}>*/}\r\n        {/*    <NavLink activeClassName={s.selected} to={PATH.NEW_PASSWORD}>New Password</NavLink>*/}\r\n        {/*</span>*/}\r\n        <span className={s.item}>\r\n            <NavLink activeClassName={s.selected} to={PATH.PROFILE}>Profile</NavLink>\r\n        </span>\r\n    </div>\r\n}","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport SuperCheckbox from \"./common/SuperCheckbox/SuperCheckbox\";\r\nimport SuperInputText from \"./common/SuperInputText/SuperInputText\";\r\nimport SuperButton from \"./common/SuperButton/SuperButton\";\r\nimport {HashRouter} from \"react-router-dom\";\r\nimport {Header} from \"./common/Header/Header\";\r\nimport {Routes} from \"./Routes\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n        <HashRouter>\r\n        <Header />\r\n        <Routes />\r\n\r\n        </HashRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","type InitStateType = {\r\n\r\n}\r\ntype ActionType = {\r\n    type: string\r\n}\r\n\r\nconst initState: InitStateType = {\r\n\r\n}\r\n\r\nexport const profileReducer = (state = initState, action: ActionType) => {\r\n    switch(action.type) {\r\n        case \"\": {\r\n            return state\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}","import {applyMiddleware, createStore} from \"redux\";\r\nimport {combineReducers} from \"redux\";\r\nimport {profileReducer} from \"./profile-reducer\";\r\nimport {registerReducer} from \"./register-reducer\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport {loginReducer} from \"./login-reducer\";\r\nimport {recoverPasswordReducer} from \"./recover-password-reducer\";\r\nimport {newPasswordReducer} from \"./new-password-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    profile: profileReducer,\r\n    register: registerReducer,\r\n    login: loginReducer,\r\n    recoverPassword: recoverPasswordReducer,\r\n    newPassword: newPasswordReducer\r\n})\r\n\r\nconst store = createStore(reducers, applyMiddleware(thunkMiddleware))\r\n\r\nexport default store;\r\nexport type AppStoreType = ReturnType<typeof reducers>\r\n\r\n//@ts-ignore\r\nwindow.store = store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}